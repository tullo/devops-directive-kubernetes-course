version: "3"

env:
  BORDER: double
  BORDER_FOREGROUND: "212"
  PADDING: "1 1"
  MARGIN: "1 1"
  NAMESPACE: 04--service

tasks:
  01-create-namespace:
    desc: "Create a namespace for these examples and set as default"
    cmds:
      - kubectl apply -f Namespace.yaml
      - kubens ${NAMESPACE}

  02-apply-deployment:
    desc: "Apply the Deployment configuration"
    cmds:
      - kubectl apply -f Deployment.yaml

  03-apply-clusterip-service:
    desc: "Apply the ClusterIP Service"
    cmds:
      - kubectl apply -f Service.nginx-clusterip.yaml

  04-apply-nodeport-service:
    desc: "Apply the  NodePort Service"
    cmds:
      - kubectl apply -f Service.nginx-nodeport.yaml
      - cmd: gum style "ðŸ’¡ Add a firewall rule to allow inbound traffic for nodeport port!"
        silent: true

  05-apply-loadbalancer-service:
    desc: "Apply the  LoadBalancer Service"
    cmds:
      - kubectl apply -f Service.nginx-loadbalancer.yaml

  06-delete-namespace:
    desc: "Delete the namespace to clean up"
    cmds:
      - cmd: gum style "ðŸš¨ Deleting the namespace recursively deletes the resources inside of it! ðŸš¨ "
        silent: true
      - kubectl delete -f Namespace.yaml

# Notes:
# curl internal services (cluster-ip/node-port
# kubectl run curlpod --rm -it --image curlimages/curl:8.12.1 -- sh
#   curl nginx-clusterip:80
#   curl nginx-nodeport:80
#
#   curl nginx-nodeport.<ns>.svc.cluster.local:<port>
#
# for kind loadbalancer: one has to open a seperate terminal and run
# task kind:03-run-cloud-provider-kind in 03-installation-and-setup dir
# and leave that terminal running
